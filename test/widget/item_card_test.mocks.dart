// Mocks generated by Mockito 5.4.6 from annotations
// in item_manager/test/widget/item_card_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:item_manager/models/item.dart' as _i3;
import 'package:item_manager/providers/item_provider.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ItemProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockItemProvider extends _i1.Mock implements _i2.ItemProvider {
  MockItemProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Item> get items =>
      (super.noSuchMethod(Invocation.getter(#items), returnValue: <_i3.Item>[])
          as List<_i3.Item>);

  @override
  List<String> get locations =>
      (super.noSuchMethod(
            Invocation.getter(#locations),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<String> get categories =>
      (super.noSuchMethod(
            Invocation.getter(#categories),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.Future<void> loadItems() =>
      (super.noSuchMethod(
            Invocation.method(#loadItems, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> addItem({
    required String? name,
    required String? category,
    required String? location,
    String? imagePath,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addItem, [], {
              #name: name,
              #category: category,
              #location: location,
              #imagePath: imagePath,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateItem(_i3.Item? item) =>
      (super.noSuchMethod(
            Invocation.method(#updateItem, [item]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteItem(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteItem, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  List<_i3.Item> getItemsByLocation(String? location) =>
      (super.noSuchMethod(
            Invocation.method(#getItemsByLocation, [location]),
            returnValue: <_i3.Item>[],
          )
          as List<_i3.Item>);

  @override
  List<_i3.Item> getItemsByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getItemsByCategory, [category]),
            returnValue: <_i3.Item>[],
          )
          as List<_i3.Item>);

  @override
  List<_i3.Item> searchItems(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchItems, [query]),
            returnValue: <_i3.Item>[],
          )
          as List<_i3.Item>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
